SETUP=false
RELEASE=1.0
NODE_ENV=example
ENV_NAME=example
HOST=localhost
PORT=80
HTTPS_PORT=443
HASHING_SECRET=MySecret

# Custom server bootstrap file
BOOTSTRAP_FILE=./bootstrap.js

# Enable multi-tenancy (true/false)
MULTI_TENANT=false

# If multi-tenancy is disabled, specify the single tenant id
SINGLE_TENANT_ID=00000000-0000-0000-0000-000000000000

# Enable interactive mode (do *not* use in production)
# Allow to type javascript commands directly in the server console to check/debug some variables
INTERACTIVE_MODE=false

# Super admins receive all logs and error reports
SUPER_ADMIN=david.grossi@pickaform.com

# Possible values : 'secure' (https, wss), 'insecure' (http, ws), 'both'
# secure : setup only https and wss servers. Required certificates to be configured.
# insecure : setup only http and ws servers. Recommended if behind a proxy
# both : setup secure and insecure servers.
SERVER_MODE=both

# Either the current server is behind a proxy or not.
# 0 : false
# 1 : true
PROXY=0

#
# WEBSOCKET SERVER
#

# Either 'websocket-node' or 'uWebSocket'
# Beware : it is CASE SENSITIVE
# Defaults to websocket-node as it is the most compatible server for now
WS_SERVER=websocket-node

# Enable the experimental compatibility layer that makes uWebSocket and express to work on the same port.
WS_EXPRESS_COMPAT=0

# Will be ignored if WS_SERVER=websocket-node
WS_PORT=80
WSS_PORT=443

# This port is the publicly exposed port for websockets if PROXY is set to 1
WS_PROXY_PORT=

# unit : seconds
WS_IDLE_TIMEOUT=120

# unit : bytes
# 16 x 1024 x 1024 -> 16Mb
WS_MAX_PAYLOAD_LENGTH=16777216

# unit : bytes
# 2 * 1024 -> 2Kb
WS_BACKPRESSURE_THRESHOLD=2048

# Following config have no unit.
WS_MAX_SOCKETS_BY_USER=1
WS_MAX_BUFFERED_MESSAGES=25

# Clients are not allowed to send more than this number of messages per second to the server
# Set to 0 for no limit
WS_MAX_MESSAGES_PER_SECOND=50

# Allow to lax the MAX_MESSAGES_PER_SECOND rule and allow the client to stress the server for a very short period of time
# It is useful when the frontend may send several events really close to each other in some circumstances.
WS_MAX_RATE_LIMITER_HITS=5

#
# LOGS
#

# Type of logs to enable
# *: all
# 0: default
# 1: information
# 2: ack
# 3: warnings
# 4: errors
# Provide a coma separated list of log types to enable several of them at once.
LOG_TYPES=*

# Categories to enable
# *: all
# Provide a coma separated list of log categories to enable several of them at once.
# All strings MUST NOT contain any whitespace.
LOG_CATEGS=*

# Enable printing of data associated to logs.
# 0: disable
# 1: enable
LOG_DATA=1

#
# ERROR REPORTING
#

# Only supports mail for now. We may want to use a monitoring system later.
# no: no reporting
# mail: send a report according to the config policy to recipients specified in ERR_REPORTING_RECIPIENTS
ERR_REPORTING_MODE=no

# Either 'instant' or 'periodic'
# defaults to 'periodic'
ERR_REPORTING_POLICY=periodic

# Delay between two report attempts (in ms)
# defaults to 60 * 60 * 1000 -> 1 hour
ERR_REPORTING_DELAY=3600000

# If error reporting fails several times in a row, we crash the server
# set to -1 to disable
# defaults to 5
ERR_REPORTING_MAX_ATTEMPTS_BEFORE_CRASH=5

# Coma separated list of recipients for the report
# If not set, but report is still configured on 'mail', the server will defaults to 'no'
ERR_REPORTING_RECIPIENTS=david.grossi@pickaform.com

# Current instance name, used to identify a server in an error report
INSTANCE=dev server

#
# JSONWEBTOKEN
#

JWT_ACCESS_TOKEN_SECRET=MySecret
JWT_ACCESS_TOKEN_LIFE=21600s
JWT_REFRESH_TOKEN_SECRET=MySecret
JWT_REFRESH_TOKEN_LIFE=21600s

#
# SESSION
#

# Time in ms before performing a session cleanup
SESSION_CLEAN_EVERY=300000

#
# DATABASE
#

DB_TYPE=mongo
DB_HOST=mongodb.ayx7v5f.mongodb.net
DB_PORT=27017
DB_NAME=skyexplorer
DB_PATH=mongodb+srv://juliaangelinagrossi:SkyExplorer@mongodb.ayx7v5f.mongodb.net/

#
# STRIPE
#

STRIPE_PUBLISHABLE_KEY=N/A
STRIPE_SECRET_KEY=N/A
WEBHOOK_SECRET_KEY=N/A

#
# UPLOAD
#

# options: local / amazon_s3 // => Future options: microsoft_azure_blob_storage / google_cloud_storage
UPLOAD_DESTINATION=local

# Allow to configure thumbnails thresholds sizes
# Format: hxw where h = max height and w = max width
# Thumbnails will be contained by those values, keeping image aspect ratio.
# As such, all non-square image will have only one of its dimension equal to h or w.
UPLOAD_THUMBS_S=64x64
UPLOAD_THUMBS_M=256x256
UPLOAD_THUMBS_L=512x512

#
# AMAZON S3
#

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
AWS_BUCKET=

#
# PDF CONVERTER
#

# Either 'local' or 'remote'
# In 'local' mode, LibreOffice must be installed locally.
# In 'remote' mode, you must specify a remote service to use for pdf conversion.
PDF_CONVERTER_MODE=local
PDF_CONVERTER_HOST=
PDF_CONVERTER_PATH=convertToPdf
PDF_CONVERTER_PORT=
PDF_CONVERTER_KEY=

# Only used in 'local' mode
PDF_CONVERTER_WORK_DIR=

#
# PDF CONVERTER API
#

# Must not be true if the current config is also used to start a Pickaform instance.
# If it is the case, then pass PDF_CONVERTER_API_ENABLED=true in the API command invocation.
PDF_CONVERTER_API_ENABLED=false

# The listen port used by our pdf converter API
PDF_CONVERTER_API_PORT=3000
PDF_CONVERTER_API_LIBREOFFICE_PATH="soffice"
PDF_CONVERTER_API_WORK_DIR="/tmp/docx2pdf"

#   
# SMTP
#

SMTP_HOST=smtp-relay.brevo.com
SMTP_PORT=465
SMTP_SECURE=true
SMTP_USER=david@pickaform.com
SMTP_PASSWORD=6LC8wRVPvAyn4gF7
SMTP_FROM=noreply@sky-explorer.com

#   
# AUTHENTICATION
#

GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_CALLBACK_URL=/auth/googleCallback

AZURE_CLIENT_ID=
AZURE_CLIENT_SECRET=
AZURE_CALLBACK_URL=/auth/azureAdCallback
AZURE_TENANT_ID=

LINKEDIN_CLIENT_ID=
LINKEDIN_CLIENT_SECRET=
LINKEDIN_CALLBACK_URL=/auth/linkedinCallback
LINKEDIN_VERIFICATION_URL=

FACEBOOK_CLIENT_ID=
FACEBOOK_CLIENT_SECRET=
FACEBOOK_CALLBACK_URL=/auth/facebookCallback

INSTAGRAM_CLIENT_ID=
INSTAGRAM_CLIENT_SECRET=
INSTAGRAM_REDIRECT_URI=
INSTAGRAM_REDIRECT_TO=

#
# CLIENT AUTHENTICATION REDIRECTIONS
#
REDIRECT_TO_HOME=http://localhost:3000/index_dev.html#ui=home-start
REDIRECT_TO_LOGIN=http://localhost:3000/index_dev.html#ui=authentication-login
REDIRECT_TO_REGISTER=http://localhost:3000/index_dev.html#ui=authentication-register
REDIRECT_TO_USER_ALREADY_EXISTS=http://localhost:3000/index_dev.html#ui=authentication-register&error=UserAlreadyExists
REDIRECT_TO_ERROR=http://localhost:3000/index_dev.html#ui=authentication-error

#
# API
#

BOX_CLIENT_ID=N/A
BOX_CLIENT_SECRET=N/A
BOX_REDIRECT_TO=localhost:3000/index_dev.html#ui=box-session&ws=no

GOOGLESEARCH_API_KEY=N/A
GOOGLESEARCH_SEARCH_ENGINE_ID=N/A

TWILIO_ACCOUNT_SID=XYZ
TWILIO_AUTH_TOKEN=XYZ
TWILIO_FROM_PHONE=XYZ